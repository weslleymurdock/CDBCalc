# .github/workflows/coverage-deploy.yml
name: "Coverage and Deploy"

on:
  push:
    branches: [main]

jobs:
  test:
    name: Run Tests with Coverage
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x

    - name: Restore
      run: dotnet restore CDBCalc.sln
 
    - name: Restore .NET tools
      run: dotnet tool restore

    - name: Test
      run: |
          dotnet test "tests/unit/Application/CDBCalculator.Application.UnitTests/CDBCalculator.Application.UnitTests.csproj" 
          dotnet test "tests/unit/Domain/CDBCalculator.Domain.UnitTests/CDBCalculator.Domain.UnitTests.csproj"
          dotnet test "tests/unit/Infrastructure/CDBCalculator.Infrastructure.UnitTests/CDBCalculator.Infrastructure.UnitTests.csproj"
          dotnet test "tests/unit/MicroServices/CDBCalculator.MicroService.UnitTests/CDBCalculator.MicroService.UnitTests.csproj"
          dotnet test "tests/unit/ApiGateway/CDBCalculator.ApiGateway.UnitTests/CDBCalculator.ApiGateway.UnitTests.csproj"

    - name: Generate Coverage Report  
      run: |
        mkdir -p reports
        dotnet reportgenerator \
          -reports:"tests/unit/**/**/TestResults/coverage.xml" \
          -targetdir:"reports" \
          -reporttypes:"Html;TextSummary" \
          -title:"CDBCalculator - Cobertura Consolidada"

    - name: Save Coverage Report as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: reports/
  
  deploy:
    name: Publicar Painel de Relatórios
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'

    steps:
    - name: Checkout do repositório (index personalizado)
      uses: actions/checkout@v4
 
    - name: Baixar artefato de cobertura
      uses: actions/download-artifact@v4
      with:
        name: coverage-report
        path: reports

    - name: Publicar para GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: reports
        publish_branch: gh-pages
